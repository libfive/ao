name: Windows Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest 

    steps:

    # Check out the repository
    - uses: actions/checkout@v2

    # Cache the "vcpkg" directory, which contains the installed
    # libpng, boost, and eigen libraries, which were installed 
    # using vcpkg.
    - uses: actions/cache@v2
      id: vcpkg-cache
      with:
        path: ./vcpkg
        key: ${{ runner.os }}-vcpkg-cache-min-2-x64

    # Download and install "vskpg" a package manager for 
    # C++ which we only use for windows builds.  Skip this 
    # stage if the pull from the cache was successful.
    - name: Bootstrap vspkg
      if: steps.vcpkg-cache.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg 
        git checkout 2020.04
        cd ..
        vcpkg\bootstrap-vcpkg.bat

    # Install all of the required packages.  Note that we only 
    # grab the boost libraries that are necessary, because otherwise
    # the install time is very long, and the resulting directory is 
    # so big that github refuses to cache it!
    - name: Install packages
      if: steps.vcpkg-cache.outputs.cache-hit != 'true'
      run: |
        vcpkg\vcpkg install libpng:x64-windows-static 
        vcpkg\vcpkg install boost-algorithm:x64-windows-static 
        vcpkg\vcpkg install boost-lockfree:x64-windows-static 
        vcpkg\vcpkg install boost-bimap:x64-windows-static 
        vcpkg\vcpkg install boost-interval:x64-windows-static 
        vcpkg\vcpkg install eigen3:x64-windows-static

    # Sets environment variables that are requred for
    # some of the later stages
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.1

    # Use cmake to generate the msbuild files for the files.
    - name: Cmake Generator
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        md build
        cd build
        cmake -DCMAKE_TOOLCHAIN_FILE="..\vcpkg\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET="x64-windows-static" -G "Visual Studio 16 2019" ..

    # Actually build the project generated by cmake
    - name: Build
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        msbuild build/libfive.sln

    # Print the tree (useful for debugging)
    - name: Tree
      continue-on-error: true
      run: tree /F build

    # Tests do no pass on Windows
    - name: Test
      continue-on-error: true
      timeout-minutes: 5
      run: ./build/Output/Debug/libfive-test.exe
